openapi: 3.0.3
info:
  title: Space Mate API
  version: 1.0.0
  description: Room Sharing App
paths:
  /api/booking/:
    get:
      operationId: booking_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - booking
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingList'
          description: ''
    post:
      operationId: booking_create
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/booking/{id}/:
    get:
      operationId: booking_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Booking.
        required: true
      tags:
      - booking
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    put:
      operationId: booking_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Booking.
        required: true
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    patch:
      operationId: booking_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Booking.
        required: true
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    delete:
      operationId: booking_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Booking.
        required: true
      tags:
      - booking
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/property/:
    get:
      operationId: property_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - property
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPropertyList'
          description: ''
    post:
      operationId: property_create
      tags:
      - property
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
  /api/property/{id}/:
    get:
      operationId: property_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - property
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    put:
      operationId: property_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - property
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Property'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Property'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    patch:
      operationId: property_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - property
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProperty'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
          description: ''
    delete:
      operationId: property_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Property.
        required: true
      tags:
      - property
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/review/:
    get:
      operationId: review_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - review
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: review_create
      tags:
      - review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/review/{id}/:
    get:
      operationId: review_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - review
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: review_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: review_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: review_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      tags:
      - review
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/room/:
    get:
      operationId: room_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - room
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoomList'
          description: ''
    post:
      operationId: room_create
      tags:
      - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/room/{id}/:
    get:
      operationId: room_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Room.
        required: true
      tags:
      - room
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    put:
      operationId: room_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Room.
        required: true
      tags:
      - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    patch:
      operationId: room_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Room.
        required: true
      tags:
      - room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    delete:
      operationId: room_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Room.
        required: true
      tags:
      - room
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/user/:
    get:
      operationId: user_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: user_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this User Profile.
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Booking:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        guest:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        is_confirmed:
          type: boolean
        is_cancelled:
          type: boolean
        is_checked_in:
          type: boolean
        is_checked_out:
          type: boolean
        is_paid:
          type: boolean
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        payment_id:
          type: string
          nullable: true
          maxLength: 255
      required:
      - check_in
      - check_out
      - created_at
      - deleted_at
      - guest
      - id
      - room
      - total_amount
      - updated_at
    CityEnum:
      enum:
      - dubai
      - abu-dhabi
      - sharjah
      - ajman
      - ras-al-khaimah
      type: string
      description: |-
        * `dubai` - Dubai
        * `abu-dhabi` - Abu Dhabi
        * `sharjah` - Sharjah
        * `ajman` - Ajman
        * `ras-al-khaimah` - Ras Al Khaimah
    NullEnum:
      enum:
      - null
    PaginatedBookingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
    PaginatedPropertyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Property'
    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PaginatedRoomList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Room'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedBooking:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        guest:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        is_confirmed:
          type: boolean
        is_cancelled:
          type: boolean
        is_checked_in:
          type: boolean
        is_checked_out:
          type: boolean
        is_paid:
          type: boolean
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        payment_id:
          type: string
          nullable: true
          maxLength: 255
    PatchedProperty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        owner_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        address:
          type: string
          maxLength: 255
        city:
          $ref: '#/components/schemas/CityEnum'
        area:
          type: string
          maxLength: 50
        location:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_available:
          type: boolean
        is_featured:
          type: boolean
        is_verified:
          type: boolean
        amenities:
          type: array
          items:
            type: integer
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        guest:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        is_moderated:
          type: boolean
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        rating:
          type: integer
        comment:
          type: string
    PatchedRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        room_type:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_available:
          type: boolean
        max_beds:
          type: integer
        vacant_beds:
          type: integer
        available_from:
          type: string
          format: date
        restriction:
          type: string
          nullable: true
          maxLength: 255
        property:
          type: integer
        amenities:
          type: array
          items:
            type: integer
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: string
          nullable: true
          maxLength: 255
        city:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CityEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        is_verified:
          type: boolean
        is_email_verified:
          type: boolean
        is_property_owner:
          type: boolean
        user:
          type: integer
    Property:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        owner_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        address:
          type: string
          maxLength: 255
        city:
          $ref: '#/components/schemas/CityEnum'
        area:
          type: string
          maxLength: 50
        location:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_available:
          type: boolean
        is_featured:
          type: boolean
        is_verified:
          type: boolean
        amenities:
          type: array
          items:
            type: integer
      required:
      - address
      - area
      - city
      - created_at
      - deleted_at
      - description
      - id
      - location
      - owner
      - owner_id
      - price
      - title
      - updated_at
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        guest:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        is_moderated:
          type: boolean
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        rating:
          type: integer
        comment:
          type: string
      required:
      - comment
      - created_at
      - deleted_at
      - guest
      - id
      - is_moderated
      - rating
      - room
      - room_id
      - updated_at
    Room:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        room_type:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_available:
          type: boolean
        max_beds:
          type: integer
        vacant_beds:
          type: integer
        available_from:
          type: string
          format: date
        restriction:
          type: string
          nullable: true
          maxLength: 255
        property:
          type: integer
        amenities:
          type: array
          items:
            type: integer
      required:
      - available_from
      - created_at
      - deleted_at
      - description
      - id
      - max_beds
      - price
      - property
      - room_type
      - title
      - updated_at
      - vacant_beds
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: string
          nullable: true
          maxLength: 255
        city:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CityEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        profile_picture:
          type: string
          format: uri
          nullable: true
        bio:
          type: string
          nullable: true
        is_verified:
          type: boolean
        is_email_verified:
          type: boolean
        is_property_owner:
          type: boolean
        user:
          type: integer
      required:
      - created_at
      - deleted_at
      - id
      - updated_at
      - user
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
